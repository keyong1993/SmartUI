<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
                    xmlns:assist="clr-namespace:SmartUI.Assist"
                    xmlns:smart="clr-namespace:SmartUI.Controls">

    <Style x:Key="DefaultButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Padding" Value="15 6"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource BgWhiteColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBaseColor}"/>
        <Setter Property="assist:ButtonAssist.Icon" Value="None"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="4"/>
                        <DockPanel x:Name="contont" LastChildFill="True" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}">
                            <smart:PackIcon Kind="{TemplateBinding assist:ButtonAssist.Icon}" x:Name="icon" Foreground="{TemplateBinding Foreground}" Width="18" Height="18" DockPanel.Dock="Left"/>
                            <Label IsHitTestVisible="True" Cursor="{TemplateBinding Cursor}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center"/>
                        </DockPanel>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="assist:ButtonAssist.Icon" Value="None">
                            <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource BrandColor}" />
                            <Setter Property="Opacity" Value="0.1" TargetName="border"/>
                            <Setter Property="Foreground" Value="{DynamicResource BrandColor}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource BrandColor}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" TargetName="border"/>
                            <Setter Property="Opacity" Value="0.6" TargetName="contont"/>
                            <Setter Property="Cursor" Value="No"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonStyle}"/>

    <Style x:Key="PrimaryButtonStyle1" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource BrandColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBaseColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="4"/>
                        <DockPanel x:Name="contont" LastChildFill="True" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}">
                            <smart:PackIcon x:Name="icon" Kind="{TemplateBinding assist:ButtonAssist.Icon}" Width="18" Height="18" DockPanel.Dock="Left" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <Label IsHitTestVisible="True" Cursor="{TemplateBinding Cursor}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" Style="{x:Null}" HorizontalAlignment="Center"/>
                        </DockPanel>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="assist:ButtonAssist.Icon" Value="None">
                            <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" Value="0.7" TargetName="border"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" TargetName="border"/>
                            <Setter Property="Opacity" Value="0.6" TargetName="contont"/>
                            <Setter Property="Cursor" Value="No"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultButtonStyle2" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBaseColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Margin}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="4">
                            <Grid x:Name="grid" Background="{TemplateBinding Background}" Opacity="0.2" SnapsToDevicePixels="True" ClipToBounds="True"/>
                        </Border>
                        <DockPanel x:Name="contont" LastChildFill="True" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <smart:PackIcon x:Name="icon" Kind="{TemplateBinding assist:ButtonAssist.Icon}" Width="24" Height="24" DockPanel.Dock="Left"/>
                            <Label IsHitTestVisible="True" Cursor="{TemplateBinding Cursor}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center"/>
                        </DockPanel>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="assist:ButtonAssist.Icon" Value="None">
                            <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" Value="1" TargetName="grid"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource BrandColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BrandColor}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" TargetName="grid"/>
                            <Setter Property="Opacity" Value="0.6" TargetName="contont"/>
                            <Setter Property="Cursor" Value="No"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryButtonStyle2" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource BrandColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource BrandColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Margin}"  BorderBrush="{TemplateBinding Background}" BorderThickness="1" CornerRadius="4">
                            <Grid x:Name="grid" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" Opacity="0.2"/>
                        </Border>
                        <DockPanel x:Name="contont" LastChildFill="True" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <smart:PackIcon x:Name="icon" Kind="{TemplateBinding assist:ButtonAssist.Icon}" Width="24" Height="24" DockPanel.Dock="Left"/>
                            <Label IsHitTestVisible="True" Cursor="{TemplateBinding Cursor}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center"/>
                        </DockPanel>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="assist:ButtonAssist.Icon" Value="None">
                            <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" Value="1" TargetName="grid"/>
                            <Setter Property="Foreground" Value="White"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" TargetName="grid"/>
                            <Setter Property="Opacity" Value="0.6" TargetName="contont"/>
                            <Setter Property="Cursor" Value="No"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SuccessButtonStyle1" TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButtonStyle1}">
        <Setter Property="Background" Value="{DynamicResource SuccessColor}"/>
    </Style>
    <Style x:Key="InfoButtonStyle1" TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButtonStyle1}">
        <Setter Property="Background" Value="{DynamicResource InfoColor}"/>
    </Style>
    <Style x:Key="WarningButtonStyle1" TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButtonStyle1}">
        <Setter Property="Background" Value="{DynamicResource WarningColor}"/>
    </Style>
    <Style x:Key="ErrorButtonStyle1" TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButtonStyle1}">
        <Setter Property="Background" Value="{DynamicResource ErrorColor}"/>
    </Style>

    <Style x:Key="SuccessButtonStyle2" TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButtonStyle2}">
        <Setter Property="Background" Value="{DynamicResource SuccessColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource SuccessColor}"/>
    </Style>
    <Style x:Key="InfoButtonStyle2" TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButtonStyle2}">
        <Setter Property="Background" Value="{DynamicResource InfoColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource InfoColor}"/>
    </Style>
    <Style x:Key="WarningButtonStyle2" TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButtonStyle2}">
        <Setter Property="Background" Value="{DynamicResource WarningColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource WarningColor}"/>
    </Style>
    <Style x:Key="ErrorButtonStyle2" TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButtonStyle2}">
        <Setter Property="Background" Value="{DynamicResource ErrorColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ErrorColor}"/>
    </Style>
    
    <Style x:Key="SuccessButtonStyle3" TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButtonStyle1}">
        <Setter Property="Background" Value="{DynamicResource SuccessColor}"/>
    </Style>
    <Style x:Key="InfoButtonStyle3" TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButtonStyle1}">
        <Setter Property="Background" Value="{DynamicResource InfoColor}"/>
    </Style>
    <Style x:Key="WarningButtonStyle3" TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButtonStyle1}">
        <Setter Property="Background" Value="{DynamicResource WarningColor}"/>
    </Style>
    <Style x:Key="ErrorButtonStyle3" TargetType="{x:Type Button}" BasedOn="{StaticResource PrimaryButtonStyle1}">
        <Setter Property="Background" Value="{DynamicResource ErrorColor}"/>
    </Style>
    <Style x:Key="FilletDefaultButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="{c:Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path='ActualHeight/2.5'}" Padding="{TemplateBinding Padding}"/>
                        <DockPanel x:Name="contont" LastChildFill="True" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <smart:PackIcon Kind="{TemplateBinding assist:ButtonAssist.Icon}" x:Name="icon" Foreground="{TemplateBinding Foreground}" Width="24" Height="24" DockPanel.Dock="Left"/>
                            <Label IsHitTestVisible="True" Cursor="{TemplateBinding Cursor}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center"/>
                        </DockPanel>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="assist:ButtonAssist.Icon" Value="None">
                            <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource BrandColor}" />
                            <Setter Property="Opacity" Value="0.1" TargetName="border"/>
                            <Setter Property="Foreground" Value="{DynamicResource BrandColor}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource BrandColor}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" TargetName="border"/>
                            <Setter Property="Opacity" Value="0.6" TargetName="contont"/>
                            <Setter Property="Cursor" Value="No"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilletPrimaryButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource BrandColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBaseColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"  CornerRadius="{c:Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path='ActualHeight/2.5'}" Padding="{TemplateBinding Padding}"/>
                        <DockPanel x:Name="contont" LastChildFill="True" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <smart:PackIcon x:Name="icon" Kind="{TemplateBinding assist:ButtonAssist.Icon}" Width="24" Height="24" DockPanel.Dock="Left"/>
                            <Label IsHitTestVisible="True" Cursor="{TemplateBinding Cursor}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center"/>
                        </DockPanel>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="assist:ButtonAssist.Icon" Value="None">
                            <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" Value="0.7" TargetName="border"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" TargetName="border"/>
                            <Setter Property="Opacity" Value="0.6" TargetName="contont"/>
                            <Setter Property="Cursor" Value="No"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilletSuccessButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource FilletPrimaryButtonStyle}">
        <Setter Property="Background"  Value="{DynamicResource SuccessColor}"/>
    </Style>
    <Style x:Key="FilletInfoButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource FilletPrimaryButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource InfoColor}"/>
    </Style>
    <Style x:Key="FilletWarningButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource FilletPrimaryButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource WarningColor}"/>
    </Style>
    <Style x:Key="FilletErrorButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource FilletPrimaryButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource ErrorColor}"/>
    </Style>

    <Style x:Key="CircleDefaultButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"  CornerRadius="{c:Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path='ActualHeight/2.5'}" Padding="{TemplateBinding Padding}"/>
                        <smart:PackIcon x:Name="icon" Foreground="{TemplateBinding Foreground}" Kind="{TemplateBinding assist:ButtonAssist.Icon}" Width="18" Height="18" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="assist:ButtonAssist.Icon" Value="None">
                            <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource BrandColor}" />
                            <Setter Property="Opacity" Value="0.1" TargetName="border"/>
                            <Setter Property="Foreground" Value="{DynamicResource BrandColor}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource BrandColor}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" TargetName="border"/>
                            <Setter Property="Cursor" Value="No"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CirclePrimaryButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="Background" Value="{DynamicResource BrandColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBaseColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"  CornerRadius="{c:Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path='ActualHeight/2.5'}" Padding="{TemplateBinding Padding}"/>
                        <smart:PackIcon x:Name="icon" Foreground="{TemplateBinding Foreground}" Kind="{TemplateBinding assist:ButtonAssist.Icon}" Width="18" Height="18" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="assist:ButtonAssist.Icon" Value="None">
                            <Setter TargetName="icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" Value="0.7" TargetName="border"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6" TargetName="border"/>
                            <Setter Property="Cursor" Value="No"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CircleSuccessButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CirclePrimaryButtonStyle}">
        <Setter Property="Background"  Value="{DynamicResource SuccessColor}"/>
    </Style>
    <Style x:Key="CircleInfoButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CirclePrimaryButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource InfoColor}"/>
    </Style>
    <Style x:Key="CircleWarningButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CirclePrimaryButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource WarningColor}"/>
    </Style>
    <Style x:Key="CircleErrorButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CirclePrimaryButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource ErrorColor}"/>
    </Style>
    <Style x:Key="TextButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource BrandColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentControl Content="{TemplateBinding Content}" />
                    <!--<Label x:Name="lable" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource TextEnabledColor}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" Value="0.7"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="RadioButton" x:Key="TopMenuStyle">
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="20 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderThickness="0 0 0 3" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0 0 0 5"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource BrandColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BrandColor}"/>
                            <Setter Property="Background" Value="WhiteSmoke"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource BrandColor}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource BrandColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BrandColor}"/>
                            <Setter Property="Background" Value="WhiteSmoke"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>