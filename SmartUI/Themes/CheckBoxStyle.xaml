<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:smart="clr-namespace:SmartUI.Controls"
                    xmlns:assist="clr-namespace:SmartUI.Assist">
    <Style x:Key="DefaultCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBaseColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="5 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="templateRoot" Cursor="{TemplateBinding Cursor}" Background="Transparent" SnapsToDevicePixels="True" Margin="0 0 5 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <smart:PackIcon x:Name="icon" Kind="CheckBoxOutlineBlank" Foreground="{TemplateBinding BorderBrush}" Height="16" Width="16" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,5,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="icon" Property="Kind" Value="CheckBox"/>
                            <Setter Property="BorderBrush" Value="{ DynamicResource BrandColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
                            <Setter Property="Cursor" Value="No"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="CheckBox" BasedOn="{StaticResource DefaultCheckBoxStyle}"/>
    <Style x:Key="CheckBoxGroupStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderLightColor}"/>
        <Setter Property="assist:ButtonAssist.IsDynamicCornerRadius" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1 1 0 1" CornerRadius="0" Background="{TemplateBinding Background}">
                        <Label HorizontalContentAlignment="Center" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource BrandColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BrandColor}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.7"/>
                            <Setter TargetName="border" Property="Cursor" Value="No"/>
                            <Setter Property="Foreground" Value="{DynamicResource RegularTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>